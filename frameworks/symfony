#!/bin/bash

BUILD_DIR="$2"
basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source $basedir/../bin/common.sh

function requires_symfony() {
    jq --raw-output '.packages | .[] | .name' < "$BUILD_DIR/composer.lock" | grep -q '^symfony/symfony$'
}

function sets_framework_symfony() {
    [ $(jq --raw-output '.extra.heroku.framework' < "$BUILD_DIR/composer.json") == "symfony" ]
}

function is_symfony2() {
    test -e "app/console"
}

function is_symfony3() {
    test -e "bin/console"
}

function get_workdir() {
    is_symfony2 && echo "app"
    is_symfony3 && echo "var"
}

function get_consnole() {
    is_symfony_2 && echo "app/console"
    is_symfony_3 && echo "bin/console"
}

case "$1" in
    detect)
        if [ ! -f "$BUILD_DIR/composer.lock" ]; then
            exit 1
        fi

        if requires_symfony || sets_framework_symfony; then
            echo "-----> Detected symfony App"
            exit 0
        else
            exit 1
        fi
        ;;
    get-log-files)
        workdir=$(get_workdir)
        echo "$workdir/logs/prod.log" "$workdir/logs/dev.log"
        ;;
    compile)
        echo "-----> Setting up symfony app"
        cp "$basedir/../conf/nginx/symfony.conf.erb" "$BUILD_DIR/conf/site.conf.erb"
        ;;
    end)
        BUILD_DIR="$1"
        CACHE_DIR="$2"
        APP_DIR="/app"

        status "Warmuping cache"
        rm -rf app/cache/*

        workdir=$(get_workdir)
        console=$(get_console)
        php $console cache:warmup --env=prod --no-debug | indent

        status "Inplace replacment of $CACHE_DIR to $APP_DIR"
        find $CACHE_DIR/$workdir/cache/prod -type f -exec sed -i "s@$CACHE_DIR@$APP_DIR@g" {} \; | indent
        grep $CACHE_DIR/$workdir/cache/prod -r . && error "Could find some '$CACHE_DIR' :/ "

        status "End"
        ;;
esac
